class t{constructor(t){this.host=t,this.host.addController(this)}get closableController(){return this.host.closableController}async hostConnected(){await this.host.updateComplete,this.onExpand(!this.host.hasAttribute("hidden")),this.observer=new MutationObserver((t=>{for(const e of t)"attributes"===e.type&&"hidden"===e.attributeName&&this.onExpand(!this.host.hasAttribute("hidden"))})),this.observer.observe(this.host,{attributes:!0})}hostDisconnected(){this.onExpand(!1),this.observer.disconnect()}onExpand(t){if(this.closableController){const e=this.closableController.priorActiveElement;e&&e.hasAttribute("popup")&&e.setAttribute("aria-expanded",t?"true":"false")}}}export{t as AriaPopupController};
//# sourceMappingURL=aria-popup.controller.js.map
