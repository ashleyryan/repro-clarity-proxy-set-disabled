import{__decorate as t}from"tslib";import{html as e}from"lit";import{listenForAttributeChange as s,globalStyle as o,state as i}from"@cds/core/internal";import{CdsControl as r}from"@cds/core/forms";import{inputStyles as l}from"@cds/core/input";import p from"./select.global.scss.js";import u from"./select.element.scss.js";class n extends r{constructor(){super(...arguments),this.globalStyles=p,this.multiple=!1,this.size=!1}get suffixDefaultTemplate(){return e`<cds-button-expand pressed readonly="readonly"></cds-button-expand>`}static get styles(){return[...super.styles,l,u]}firstUpdated(t){super.firstUpdated(t),this.multiple=this.inputControl.hasAttribute("multiple"),this.observers.push(s(this.inputControl,"multiple",(t=>this.multiple=null!==t))),this.size=this.inputControl.hasAttribute("size"),this.observers.push(s(this.inputControl,"size",(t=>this.size=null!==t)))}}t([o()],n.prototype,"globalStyles",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,"multiple",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,"size",void 0);export{n as CdsSelect};
//# sourceMappingURL=select.element.js.map
